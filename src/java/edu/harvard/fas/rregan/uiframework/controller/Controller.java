/*
 * $Id$
 * Copyright 2008, 2009 Ron Regan Jr. All Rights Reserved.
 * This file is part of Requel - the Collaborative Requirments
 * Elicitation System.
 *
 * Requel is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * Requel is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with Requel. If not, see <http://www.gnu.org/licenses/>.
 *
 */
package edu.harvard.fas.rregan.uiframework.controller;

import java.util.Set;

import nextapp.echo2.app.event.ActionEvent;
import nextapp.echo2.app.event.ActionListener;

/**
 * A Command ecapsulates a function in the system that is invoked through event
 * passing via the EventDispatcher and optionally responds with an event.
 * 
 * @author ron
 */
public interface Controller extends ActionListener {

	/**
	 * @return a Set of the types of events this command handles
	 */
	public Set<Class<? extends ActionEvent>> getEventTypesToListenFor();

	/**
	 * Add an ActionListener that listens for events generated by this Command
	 * when a service method is invoked. This is primarly for the
	 * EventDispatcher to listen for events to forward to other listeners.<br/>NOTE:
	 * it is the responsability of the actionListener to remove itself when it
	 * is no longer interested in the events. Not doing so could result in the
	 * listener remaining in memory.
	 * 
	 * @param actionListener
	 */
	public void addActionListener(ActionListener actionListener);

	/**
	 * Remove an ActionListener currently listening for events.
	 * 
	 * @param actionListener
	 */
	public void removeActionListener(ActionListener actionListener);
}
