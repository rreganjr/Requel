/*
 * $Id: Controller.java,v 1.1 2008/02/20 11:36:29 rregan Exp $
 * Copyright (c) 2008 Ron Regan Jr. All Rights Reserved.
 */
package edu.harvard.fas.rregan.uiframework.controller;

import java.util.Set;

import nextapp.echo2.app.event.ActionEvent;
import nextapp.echo2.app.event.ActionListener;

/**
 * A Command ecapsulates a function in the system that is invoked through event
 * passing via the EventDispatcher and optionally responds with an event.
 * 
 * @author ron
 */
public interface Controller extends ActionListener {

	/**
	 * @return a Set of the types of events this command handles
	 */
	public Set<Class<? extends ActionEvent>> getEventTypesToListenFor();

	/**
	 * Add an ActionListener that listens for events generated by this Command
	 * when a service method is invoked. This is primarly for the
	 * EventDispatcher to listen for events to forward to other listeners.<br/>NOTE:
	 * it is the responsability of the actionListener to remove itself when it
	 * is no longer interested in the events. Not doing so could result in the
	 * listener remaining in memory.
	 * 
	 * @param actionListener
	 */
	public void addActionListener(ActionListener actionListener);

	/**
	 * Remove an ActionListener currently listening for events.
	 * 
	 * @param actionListener
	 */
	public void removeActionListener(ActionListener actionListener);
}
